#!/usr/bin/make -f
# -*- makefile -*-
# Sample debian/rules that uses debhelper.
#
# This file was originally written by Joey Hess and Craig Small.
# As a special exception, when this file is copied by dh-make into a
# dh-make output file, you may use that output file without restriction.
# This special exception was added by Craig Small in version 0.37 of dh-make.
#
# Modified to make a template file for a multi-binary package with separated
# build-arch and build-indep targets  by Bill Allombert 2001

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

# This has to be exported to make some magic below work.
export DH_OPTIONS


#Architecture 
build: build-arch build-indep

build-arch: build-arch-stamp
build-arch-stamp:
	dh_testdir
	./configure --prefix=/usr --CFLAGS=$(CFLAGS)
	$(MAKE) programs/lv2peg/lv2peg
	touch $@

build-indep: build-indep-stamp
build-indep-stamp:
	touch $@

clean:
	dh_testdir
	dh_testroot
	rm -f build-arch-stamp build-indep-stamp 
	$(MAKE) clean
	rm -f Makefile.deps
	dh_clean 

install: install-indep install-arch
install-indep:
	dh_testdir
	dh_testroot
	dh_clean -k -i 
	dh_installdirs -i
	dh_install -i

IDIR = $(CURDIR)/debian/liblv2-plugin-dev

install-arch:
	dh_testdir
	dh_testroot
	dh_clean -k -s 
	dh_installdirs -s

	# First, install everything to the liblv2-plugin-dev directory
	$(MAKE) DESTDIR=$(IDIR) install

	# Remove all files that shouldn't be in the packages
	rm -rf $(IDIR)/usr/share/doc/lv2-c++-tools

	# Move all files that should be in other packages

	# lv2peg
	mkdir -p $(CURDIR)/debian/lv2peg/usr/bin
	mv $(IDIR)/usr/bin/lv2peg $(CURDIR)/debian/lv2peg/usr/bin

	# liblv2-gui-dev
	mkdir -p $(CURDIR)/debian/liblv2-gui-dev/usr/lib/pkgconfig
	mv $(IDIR)/usr/lib/liblv2-gui.a $(CURDIR)/debian/liblv2-gui-dev/usr/lib
	mv $(IDIR)/usr/lib/pkgconfig/lv2-gui.pc $(CURDIR)/debian/liblv2-gui-dev/usr/lib/pkgconfig
	mkdir -p $(CURDIR)/debian/liblv2-gui-dev/usr/include/lv2-c++-tools
	cd $(IDIR)/usr/include/lv2-c++-tools && mv lv2gui.hpp lv2-ui.h $(CURDIR)/debian/liblv2-gui-dev/usr/include/lv2-c++-tools

	# libpaq0
	mkdir -p $(CURDIR)/debian/libpaq0/usr/lib
	mv $(IDIR)/usr/lib/libpaq.so.*.0.0 $(CURDIR)/debian/libpaq0/usr/lib

	# libpaq-dev
	mkdir -p $(CURDIR)/debian/libpaq-dev/usr/lib/pkgconfig
	cd $(IDIR)/usr/lib && mv libpaq.a libpaq.so $(CURDIR)/debian/libpaq-dev/usr/lib
	mv $(IDIR)/usr/lib/pkgconfig/paq.pc $(CURDIR)/debian/libpaq-dev/usr/lib/pkgconfig
	mkdir -p $(CURDIR)/debian/libpaq-dev/usr/include/lv2-c++-tools
	cd $(IDIR)/usr/include/lv2-c++-tools && mv namespaces.hpp query.hpp rdf.hpp turtleparser.hpp unicode.hpp $(CURDIR)/debian/libpaq-dev/usr/include/lv2-c++-tools

	# Do special stuff

	# lv2peg	
	mkdir -p $(CURDIR)/debian/lv2peg/usr/share/man/man1
	cp $(CURDIR)/debian/lv2peg.1 $(CURDIR)/debian/lv2peg/usr/share/man/man1

	# libpaq
	cd $(CURDIR)/debian/libpaq0/usr/lib && ln -s libpaq.so.0.0.0 libpaq.so.0

	dh_install -s

# Must not depend on anything. This is to be called by
# binary-arch/binary-indep
# in another 'make' thread.
binary-common:
	dh_testdir
	dh_testroot
	dh_installchangelogs 
	dh_installdocs
	dh_installexamples
	dh_installman
	dh_link
	dh_strip
	dh_compress 
	dh_fixperms
	dh_makeshlibs
	dh_installdeb
	dh_shlibdeps
	dh_gencontrol
	dh_md5sums
	dh_builddeb

# Build architecture independant packages using the common target.
binary-indep: build-indep install-indep
	$(MAKE) -f debian/rules DH_OPTIONS=-i binary-common

# Build architecture dependant packages using the common target.
binary-arch: build-arch install-arch
	$(MAKE) -f debian/rules DH_OPTIONS=-s binary-common

binary: binary-arch binary-indep

.PHONY: build clean binary-indep binary-arch binary install install-indep install-arch 
